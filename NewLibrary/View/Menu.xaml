<Window x:Class="NewLibrary.Menu"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:NewLibrary.ViewModel"
        xmlns:local="clr-namespace:NewLibrary"
        xmlns:z="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        
        Title="Новая Библиотека | Главное меню" Height="350" Width="600">

    <!--<Window.DataContext>
        <vm:Menu_ViewModel></vm:Menu_ViewModel>
    </Window.DataContext>-->

    <z:Interaction.Triggers>
        <z:EventTrigger EventName="Closed">
            <z:InvokeCommandAction Command="{Binding WindowClosed}" />
        </z:EventTrigger>
    </z:Interaction.Triggers>

    <Window.Background>
        <ImageBrush ImageSource="background.jpg" Stretch="UniformToFill" TileMode="None"/>
    </Window.Background>

    
    <Window.Resources>
        <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#666"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FF605F5F" Offset="0"/>
                        <GradientStop Color="#FF030303" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <ColorAnimation Duration="0:0:0.5" Storyboard.TargetName="content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                    To="White"/>
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetName="hover" Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="1"/>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <ColorAnimation Duration="0:0:0.5" Storyboard.TargetName="content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                    To="White"/>
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetName="hover" Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                     To="0"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <!-- Здесь задавай нужные уголки в свойстве CornerRadius -->
                        <Border x:Name="bg" CornerRadius="5,0,5,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <Border x:Name="hover" CornerRadius="{Binding Path=CornerRadius, ElementName=bg}" Opacity="0">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.75" ScaleX="1.804" ScaleY="0.743" />
                                                    <SkewTransform CenterX="0.5" CenterY="0.75" />
                                                    <RotateTransform CenterX="0.5" CenterY="0.75" />
                                                    <TranslateTransform Y="0.47999998927116394" />
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="White" Offset="0.009" />
                                            <GradientStop Color="Transparent" Offset="1" />
                                            <GradientStop Color="Transparent" Offset="0" />
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter x:Name="content" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#FF32EBFB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>

        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"></ColumnDefinition>
            <ColumnDefinition Width="7*"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!--Command="{Binding Path=LoginCommand}"-->
        

        <Label Background="Transparent" Foreground="White" Content="{Binding Path=FioLabel_C, Mode=TwoWay}"  Name="FIO_label" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="15"></Label>

        <Button Background="Transparent" Foreground="White" Command="{Binding Path=FindBookButton}" Name="findbook_button" Grid.Column="1" Grid.Row="1" FontSize="25" Margin="3">Поиск книги</Button>
        <Button Background="Transparent" Foreground="White" Command="{Binding Path=UnavailableBooksButton}" Name="unavailablebooks_button" Grid.Column="1" Grid.Row="2" FontSize="25" Margin="3" >Книги на руках</Button>
        <Button Background="Transparent" Foreground="White" Command="{Binding Path=FindUserButton}" Name="finduser_button" Grid.Column="1" Grid.Row="3" FontSize="25" Margin="3">Поиск пользователя</Button>
        <Button Background="Transparent" Foreground="White" Command="{Binding Path=RegUserButton}" Name="reg_b" Grid.Row="4" Grid.Column="1" FontSize="25" Margin="3">Зарегистрировать пользователя</Button>
        <Button Background="Transparent" Foreground="White"  Command="{Binding Path=AddBookButton}" Name="addbook_button" Grid.Column="1" Grid.Row="6" FontSize="25" Margin="3">Добавить книгу</Button>



    </Grid>
</Window>
